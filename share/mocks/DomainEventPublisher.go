// Code generated by mockery v2.37.1. DO NOT EDIT.

package mocks

import (
	share "github.com/kuritaeiji/ec_backend/share"
	mock "github.com/stretchr/testify/mock"
)

// DomainEventPublisher is an autogenerated mock type for the DomainEventPublisher type
type DomainEventPublisher struct {
	mock.Mock
}

// Publish provides a mock function with given fields: events
func (_m *DomainEventPublisher) Publish(events []share.DomainEvent) error {
	ret := _m.Called(events)

	var r0 error
	if rf, ok := ret.Get(0).(func([]share.DomainEvent) error); ok {
		r0 = rf(events)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: events, subscriber
func (_m *DomainEventPublisher) Subscribe(events []share.DomainEvent, subscriber share.DomainEventSubscriber) {
	_m.Called(events, subscriber)
}

// NewDomainEventPublisher creates a new instance of DomainEventPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDomainEventPublisher(t interface {
	mock.TestingT
	Cleanup(func())
}) *DomainEventPublisher {
	mock := &DomainEventPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
